version: '3.9'

services:

  keycloak:
    image: quay.io/keycloak/keycloak:26.3.2
    container_name: marmotgraph_keycloak
    command: start-dev
    environment:
      KEYCLOAK_ADMIN: temporaryadmin
      KEYCLOAK_ADMIN_PASSWORD: temporaryadmin
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: marmotgraph_pg_usr
      KC_DB_PASSWORD: marmotgraph_pg_pwd
    ports:
      - "9001:8080"
    depends_on:
      - postgres

  keycloak-config-cli:
    image: bitnami/keycloak-config-cli:latest
    depends_on:
      - keycloak
    environment:
      - KEYCLOAK_URL=http://keycloak:8080
      - KEYCLOAK_USER=temporaryadmin
      - KEYCLOAK_PASSWORD=temporaryadmin
      - KEYCLOAK_AVAILABILITYCHECK_ENABLED=true
      - IMPORT_FILES_LOCATIONS=/config/*
    volumes:
      - ./kc-config:/config

  demo-data-upload:
    image: python:3.12
    working_dir: /demodata
    command:
      - /bin/bash
      - -c
      - |
        pip install -r requirements.txt
        python demodata_upload.py
    depends_on:
      - keycloak-config-cli
    environment:
      CORE_ENDPOINT: localhost:8000
      UPLOADER_SERVICE_ACCOUNT_CLIENT_ID: demo-data-uploader
      UPLOADER_SERVICE_ACCOUNT_CLIENT_SECRET: demoDataUpload
      OIDC_CLIENT: kg
    volumes:
      - ./demodata:/demodata
    extra_hosts:
      - "localhost:172.17.0.1"

  postgres:
    image: postgres:17
    container_name: marmotgraph_postgres
    environment:
      POSTGRES_USER: marmotgraph_pg_usr
      POSTGRES_PASSWORD: marmotgraph_pg_pwd
    ports:
      - "9002:5432"  # Host:Container port mapping
    volumes:
      - ./postgres:/docker-entrypoint-initdb.d
      - marmotgraph_postgres:/var/lib/postgresql/data

  arango:
    image: arangodb:3.11
    ports:
      - "9003:8529"
    environment:
      - ARANGO_ROOT_PASSWORD=marmotgraph_arango_pwd
    volumes:
      - marmotgraph_arango:/var/lib/arangodb3
    command: >
      --server.maximal-threads=32 --query.global-memory-limit=6442450944 --query.memory-limit=4294967296

  neo4j:
    image: neo4j:5.26-community
    container_name: neo4j
    ports:
      - "7474:7474" # HTTP interface
      - "7687:7687" # Bolt protocol
    environment:
      - NEO4J_AUTH=neo4j/marmotgraph_neo4j_pwd
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs


volumes:
  neo4j_data:
  neo4j_logs:
  marmotgraph_postgres:
  marmotgraph_arango:
